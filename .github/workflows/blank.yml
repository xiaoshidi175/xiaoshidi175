            - 名称：设置 Node.js 环境
  使用：actions/setup-node@v4.0.1
  和：
    # 在 npmrc 中设置always-auth。
    always-auth: # 可选，默认为 false
    # 要使用的版本的版本规范。示例：12.x、10.15.1、>=10.15.0。
    节点版本: # 可选
    # 包含要使用的版本的版本规范的文件。示例：package.json、.nvmrc、.node-version、.tool-versions。
    节点版本文件: # 可选
    # Node 使用的目标架构。示例：x86、x64。默认使用系统架构。
    架构：# 可选
    # 如果您希望操作检查满足版本规范的最新可用版本，请设置此选项。
    检查最新: # 可选
    # 用于设置身份验证的可选注册表。将在项目级别 .npmrc 和 .yarnrc 文件中设置注册表，并设置身份验证以从 env.NODE_AUTH_TOKEN 读取。
    注册表 url: # 可选
    # 针对范围注册表进行身份验证的可选范围。使用 GitHub Packages 注册表 (https://npm.pkg.github.com/) 时将回退到存储库所有者。
    范围：#可选
    # 用于从节点版本中提取节点发行版。由于存在默认值，因此用户通常不会提供该默认值。在 github.com 上运行此操作时，默认值就足够了。在 GHES 上运行时，如果遇到速率限制，您可以传递 github.com 的个人访问令牌。
    token: # 可选，默认为 ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # 用于指定一个包管理器在默认目录中进行缓存。支持的值：npm、yarn、pnpm。
    缓存: # 可选
    # 用于指定依赖文件的路径：package-lock.json、yarn.lock等。支持通配符或文件名列表，用于缓存多个依赖项。
    缓存依赖路径: # 可选
                - 名称：缓存
  使用：actions/cache@v3.3.3
  和：
    # 要缓存和恢复的文件、目录和通配符模式的列表
    小路：
    # 用于恢复和保存缓存的显式密钥
    钥匙：
    # 如果密钥没有发生缓存命中，则用于恢复陈旧缓存的有序密钥列表。请注意，在这种情况下，“cache-hit”返回 false。
    恢复密钥：# 可选
    # 上传时用于分割大文件的块大小，以字节为单位
    upload-chunk-size: # 可选
    # 启用时可选的布尔值，允许 Windows 运行程序保存或恢复可以在其他平台上分别恢复或保存的缓存
    enableCrossOsArchive: # 可选，默认为 false
    # 如果未找到缓存条目，则工作流程失败
    fail-on-cache-miss: # 可选，默认为 false
    # 检查给定输入（key、restore-keys）是否存在缓存条目，而不下载缓存
    Lookup-only: # 可选，默认为 false
          
          
